// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RineaR.Spring;
using RineaR.Spring.Common;

#nullable disable

namespace RineaR.Spring.Migrations
{
    [DbContext(typeof(SpringDbContext))]
    [Migration("20230913185239_Initial2")]
    partial class Initial2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RineaR.Spring.ActionBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ActionBase");

                    b.HasDiscriminator<string>("ActionType").HasValue("ActionBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("RineaR.Spring.User", b =>
                {
                    b.Property<ulong>("DiscordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("GitHubID")
                        .HasColumnType("longtext");

                    b.HasKey("DiscordID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("RineaR.Spring.BedIn", b =>
                {
                    b.HasBaseType("RineaR.Spring.ActionBase");

                    b.Property<int?>("WakeUpId")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("BedIn");
                });

            modelBuilder.Entity("RineaR.Spring.DailyContribution", b =>
                {
                    b.HasBaseType("RineaR.Spring.ActionBase");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("DailyContribution");
                });

            modelBuilder.Entity("RineaR.Spring.Login", b =>
                {
                    b.HasBaseType("RineaR.Spring.ActionBase");

                    b.HasDiscriminator().HasValue("Login");
                });

            modelBuilder.Entity("RineaR.Spring.Praise", b =>
                {
                    b.HasBaseType("RineaR.Spring.ActionBase");

                    b.Property<ulong>("DiscordMessageId")
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("DiscordReactionId")
                        .HasColumnType("int");

                    b.Property<int>("GivenScore")
                        .HasColumnType("int");

                    b.Property<ulong>("TargetUserId")
                        .HasColumnType("bigint unsigned");

                    b.HasIndex("TargetUserId");

                    b.HasDiscriminator().HasValue("Praise");
                });

            modelBuilder.Entity("RineaR.Spring.WakeUp", b =>
                {
                    b.HasBaseType("RineaR.Spring.ActionBase");

                    b.Property<int>("BedInId")
                        .HasColumnType("int");

                    b.HasIndex("BedInId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("WakeUp");
                });

            modelBuilder.Entity("RineaR.Spring.ActionBase", b =>
                {
                    b.HasOne("RineaR.Spring.User", "User")
                        .WithMany("Actions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RineaR.Spring.Praise", b =>
                {
                    b.HasOne("RineaR.Spring.User", "TargetUser")
                        .WithMany()
                        .HasForeignKey("TargetUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TargetUser");
                });

            modelBuilder.Entity("RineaR.Spring.WakeUp", b =>
                {
                    b.HasOne("RineaR.Spring.BedIn", "BedIn")
                        .WithOne("WakeUp")
                        .HasForeignKey("RineaR.Spring.WakeUp", "BedInId");

                    b.Navigation("BedIn");
                });

            modelBuilder.Entity("RineaR.Spring.User", b =>
                {
                    b.Navigation("Actions");
                });

            modelBuilder.Entity("RineaR.Spring.BedIn", b =>
                {
                    b.Navigation("WakeUp");
                });
#pragma warning restore 612, 618
        }
    }
}
